/*
 * -------------------------------------------------
 * Nextflow config file for CIDGOH_QC
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the configuration folder and imported under a
 * profile name here.
 */

manifest {
  description = 'CIDGOH_QC - Pipeline For QC check for NGS data'
  homePage = 'https://github.com/cidgoh'
  mainScript = 'cidgoh_qc.nf'
  nextflowVersion = '>=21.04'
  version = '0.1'
}

env {
  NXF_OPTS="-Xms2g -Xmx4g"
}

profiles {
    conda {
        includeConfig 'conf/base.config'
  includeConfig 'conf/conda.config'
    }
    docker {
    includeConfig 'conf/base.config'
    includeConfig 'conf/docker.config'
  }
  singularity {
      includeConfig 'conf/base.config'
      includeConfig 'conf/singularity.config'
      includeConfig 'conf/singularity_containers.config'
    }
    slurm {
      includeConfig 'conf/base.config'
      includeConfig 'conf/singularity.config'
  includeConfig 'conf/singularity_containers.config'
      includeConfig 'conf/slurm.config'
    }
 }

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
